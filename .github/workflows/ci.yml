name: Test branch
on: push

jobs:
  deploy-ssh-no-branch:
    name: 'os: [ubuntu-latest] - Test deploying to a new branch'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy
        echo "foobar" > "dummy/baz"
        echo "foobar" > "dummy/.bat"
    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        cp action/resources/known_hosts_github.com ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${SSH_PRIVATE_KEY}"
    - name: Delete existing banch
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: git push git@github.com:s0/git-publish-subdir-action-tests.git +:refs/heads/branch-ubuntu-latest
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-ubuntu-latest
        FOLDER: dummy
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
  deploy-ssh-no-branch-windows-latest:
    name: 'os: [windows-latest] - Test deploying to a new branch'
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy
        echo "foobar" > "dummy/baz"
        echo "foobar" > "dummy/.bat"
    # - name: Setup known_hosts
    #   run: |
    #     mkdir -p ~/.ssh
    #     cp action/resources/known_hosts_github.com ~/.ssh/known_hosts
    # - name: Setup SSH Keys
    #   uses: webfactory/ssh-agent@v0.5.2
    #   with:
    #       ssh-private-key: ${{ secrets.TESTING_PRIVATE_KEY_WINDOWS }}
    # - name: Delete existing banch
    #   run: git push git@github.com:s0/git-publish-subdir-action-tests.git +:refs/heads/branch-windows-latest
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-windows-latest
        FOLDER: dummy
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY_WINDOWS }}
  deploy-ssh-no-branch-macos-11:
    name: 'os: [macos-macos-11] - Test deploying to a new branch'
    runs-on: macos-macos-11
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy
        echo "foobar" > "dummy/baz"
        echo "foobar" > "dummy/.bat"
    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        cp action/resources/known_hosts_github.com ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${SSH_PRIVATE_KEY}"
    - name: Delete existing banch
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: git push git@github.com:s0/git-publish-subdir-action-tests.git +:refs/heads/branch-macos-11
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-macos-11
        FOLDER: dummy
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
  deploy-ssh-no-branch-macos-10-15:
    name: 'os: [macos-10.15] - Test deploying to a new branch'
    runs-on: macos-10.15
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy
        echo "foobar" > "dummy/baz"
        echo "foobar" > "dummy/.bat"
    - name: Setup SSH Keys and known_hosts
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
      run: |
        mkdir -p ~/.ssh
        cp action/resources/known_hosts_github.com ~/.ssh/known_hosts
        ssh-agent -a $SSH_AUTH_SOCK > /dev/null
        ssh-add - <<< "${SSH_PRIVATE_KEY}"
    - name: Delete existing banch
      env:
        SSH_AUTH_SOCK: /tmp/ssh_agent.sock
      run: git push git@github.com:s0/git-publish-subdir-action-tests.git +:refs/heads/branch-macos-10.15
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-macos-10.15
        FOLDER: dummy
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
  deploy-ssh-existing-branch:
    name: 'os: [ubuntu-latest] - Test deploying to a pre-existing branch'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy
        echo "foobar" > "dummy/baz"
        echo "foobar" > "dummy/.bat"
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-b
        FOLDER: dummy
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
  deploy-ssh-existing-branch-known_hosts:
    name: 'os: [ubuntu-latest] - Test deploying to a pre-existing branch (with KNOWN_HOSTS_FILE)'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy
        echo "foobar" > "dummy/baz"
        echo "foobar" > "dummy/.bat"
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-c
        FOLDER: dummy
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
        KNOWN_HOSTS_FILE: action/resources/known_hosts_github.com
  deploy-ssh-twice:
    name: 'os: [ubuntu-latest] - Test deploying multiple times in one job'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy1
        echo "foobar1" > "dummy1/baz"
        echo "foobar1" > "dummy1/.bat"
        mkdir dummy2
        echo "foobar2" > "dummy2/baz"
        echo "foobar2" > "dummy2/.bat"
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-d
        FOLDER: dummy1
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
    - name: Deploy
      uses: ./
      env:
        REPO: git@github.com:s0/git-publish-subdir-action-tests.git
        BRANCH: branch-d
        FOLDER: dummy2
        SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
  deploy-locally:
    name: 'os: [ubuntu-latest] - Test deploying to another branch of same repo'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Dummy Data
      run: |
        mkdir dummy
        echo "foobar" > "dummy/baz"
        echo "foobar" > "dummy/.bat"
    - name: Deploy
      uses: ./
      env:
        REPO: self
        BRANCH: test-branch
        FOLDER: dummy
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ci:
    name: Run Build and check output is checked-in
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: 'Build'
      run: |
        cd action
        npm install
        npm run build
    - name: Check no files have changes
      run: git diff --exit-code
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
    - name: Install NPM Packages
      run: |
        cd action
        npm install
    - name: Run Unit Tests
      run: |
        cd action
        npm run test -- --coverage
      env:
        GITHUB_SSH_PRIVATE_KEY: ${{ secrets.TESTING_PRIVATE_KEY }}
        GITHUB_SELF_TEST_REPO: ${{ github.repository }}
        GITHUB_SELF_TEST_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Check Linting
      run: |
        cd action
        npm run lint
    - name: Submit to CodeCov
      uses: codecov/codecov-action@v1
      with:
        file: ./action/coverage/lcov.info
        fail_ci_if_error: true
